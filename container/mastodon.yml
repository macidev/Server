version: '3.8'
# url: https://nerdcast.space
services:
  db:
    restart: always
    image: postgres:14-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', 'postgres' ]
    volumes:
      - ./mastodon/postgres14:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'

  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - internal_network
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
    volumes:
      - ./mastodon/redis:/data

  web:
    build: .
    image: ghcr.io/mastodon/mastodon:v4.2.7
    restart: always
    env_file: .env.production
    command: bundle exec puma -C config/puma.rb
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: [ 'CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1' ]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mastodon_external_network"
      - "traefik.http.services.mastodon-web.loadbalancer.server.port=3000"
      - "traefik.http.routers.mastodon-web.rule=Host(`nerdcast.space`)"
      - "traefik.http.routers.mastodon-web.entrypoints=websecure"
#      - "traefik.http.routers.mastodon-web.tls.certresolver=letsencrypt"
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      - db
      - redis
      - traefik
      # - es
    volumes:
      - ./mastodon/public/system:/mastodon/public/system

  streaming:
    image: tootsuite/mastodon:v3.5.3
    restart: always
    env_file: .env.production
    command: node ./streaming
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    expose:
      - "4000"
    depends_on:
      - db
      - redis
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mastodon_external_network"
      - "traefik.http.services.mastodon-streaming.loadbalancer.server.port=4000"
      - "traefik.http.routers.mastodon-streaming.rule=(Host(`nerdcast.space`) && PathPrefix(`/api/v1/streaming`))"
      - "traefik.http.routers.mastodon-streaming.entrypoints=websecure"
#      - "traefik.http.routers.mastodon-streaming.tls.certresolver=letsencrypt"
    networks:
      - external_network
      - internal_network


  # sidekiq
  sidekiq:
    build: .
    image: ghcr.io/mastodon/mastodon:v4.2.7
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
      - traefik
    networks:
      - external_network
      - internal_network
    volumes:
      - ./mastodon/public/system:/mastodon/public/system
    healthcheck:
      test: [ 'CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false" ]